<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-28T11:15:07.903Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue部署</title>
    <link href="http://example.com/2021/11/28/Vue%E9%83%A8%E7%BD%B2/"/>
    <id>http://example.com/2021/11/28/Vue%E9%83%A8%E7%BD%B2/</id>
    <published>2021-11-28T11:14:34.000Z</published>
    <updated>2021-11-28T11:15:07.903Z</updated>
    
    <content type="html"><![CDATA[<p>跨域访问测试服务器，涉及：</p><ul><li>跨域的配置</li><li>Axios的封装</li><li>Token请求头的封装</li><li>API接口的封装</li></ul><p>前后台分离部署：</p><ul><li>阿里云服务器的购买使用</li><li>FinalShell的使用</li><li>什么是Nginx为什么要用</li><li>Nginx在Windows的搭建</li><li>Nginx在Linux环境下的搭建</li><li>如何前后端分离部署</li></ul><h3 id="一-代理的配置"><a class="markdownIt-Anchor" href="#一-代理的配置"></a> 一、代理的配置：</h3><ul><li>jsonp</li><li>代理</li><li>cors</li></ul><h4 id="axios"><a class="markdownIt-Anchor" href="#axios"></a> axios：</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.axios = axios;<span class="comment">//被挂载到原型链上，这样创建的东西都挂载到实例上</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vue.config.js </span></span><br><span class="line"><span class="comment">//请阅读：https://cli.vuejs.org/zh/config/#devserver-proxy</span></span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>:<span class="string">&#x27;http://139.196.234.125:8080/login&#x27;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>:&#123;<span class="string">&#x27;^/api&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//components/**.vue </span></span><br><span class="line"> <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/api/login&quot;</span>,</span><br><span class="line">      &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> <span class="built_in">console</span>.log(res.data));</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">find</span>(<span class="params"></span>)</span> &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">      <span class="comment">//或者</span></span><br><span class="line"> <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="function"><span class="title">getStudents</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    axios.get(<span class="string">&#x27;http://localhost:8081/api/students&#x27;</span>).then(</span><br><span class="line">      <span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;success&#x27;</span>,response.data)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;error&#x27;</span>,error.message)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;,&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二-axios请求头的封装"><a class="markdownIt-Anchor" href="#二-axios请求头的封装"></a> 二、Axios请求头的封装：</h3><p>请求头的类型</p><p>​content-type (<u><a href="http://npmjs.com/package/axios">npmjs.com/package/axios</a></u>)</p><ul><li><u>application/json/</u>/数据以JSON格式请求{“key”:value}</li><li>application/x-www-form-urlencoded    //form表单的数据格式 name=value&amp;name=value</li><li>multipart/form-data  //上传文件的格式</li><li>text/xml  //格式</li></ul><p>我们用json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在http.js中</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">const</span> http = axios.create(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> http</span><br><span class="line"><span class="comment">//main.js中</span></span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;./util/http.js&#x27;</span></span><br><span class="line">Vue.prototype.axios = http;</span><br></pre></td></tr></table></figure><h3 id="三-api的封装-这里可能有错误求友友更正"><a class="markdownIt-Anchor" href="#三-api的封装-这里可能有错误求友友更正"></a> 三、api的封装 （这里可能有错误，求友友更正。）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 util/api.js 中</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> students = <span class="string">&#x27;/students&#x27;</span></span><br><span class="line"><span class="comment">//在对应组件中</span></span><br><span class="line"><span class="keyword">import</span> students <span class="keyword">from</span> <span class="string">&#x27;../util/api.js&#x27;</span></span><br><span class="line"><span class="comment">//然后ulr:&#x27;/students&#x27;-&gt; url:&#x27;students&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="四-使用nginx"><a class="markdownIt-Anchor" href="#四-使用nginx"></a> 四、使用Nginx</h3><p>两种部署方式：</p><ul><li>打包后直接给后台yarn build/ npm run build  --把dist文件给后台</li><li>前端独立部署                    — Nginx</li></ul><p>打包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>Nginx：（ <a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a> ）</p><p>​负载均衡、静态服务器、正反向代理</p><p>​下载-&gt;解压</p><p><img src="/2021/11/28/Vue%E9%83%A8%E7%BD%B2/C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211128111531271.png" alt="image-20211128111531271"></p><p><img src="/2021/11/28/Vue%E9%83%A8%E7%BD%B2/C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211128111531271.png" alt="image-20211128111531271"></p><p>用法：</p><ul><li><p>命令环境</p><ul><li>start nginx 启动</li><li>nginx -s stop 停止不保存信息</li><li>nginx -s quit 停止保存信息</li><li>nginx -s reload 重启</li><li>nginx -v  查看版本</li></ul></li><li><p>查看是否成功</p></li></ul><p>地址栏输入<u>localhost</u>  默认80端口 欢迎界面成功</p><ul><li><p>build完以后，吧dist文件扔http里</p></li><li><p>配置nginx</p></li><li><p>在conf文件里添加这段即可。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#正向代理</span><br><span class="line">       location /api &#123;</span><br><span class="line">           rewrite  ^.+api/?(.*)$ /$1 break;</span><br><span class="line">           proxy_pass  http://localhost:5000;    #node api server 即需要代理的IP地址</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;跨域访问测试服务器，涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨域的配置&lt;/li&gt;
&lt;li&gt;Axios的封装&lt;/li&gt;
&lt;li&gt;Token请求头的封装&lt;/li&gt;
&lt;li&gt;API接口的封装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前后台分离部署：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阿里云服务器的购买使用</summary>
      
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Vue部署（Nginx）</title>
    <link href="http://example.com/2021/11/28/Vue%E9%83%A8%E7%BD%B2%EF%BC%88Nginx%EF%BC%89/"/>
    <id>http://example.com/2021/11/28/Vue%E9%83%A8%E7%BD%B2%EF%BC%88Nginx%EF%BC%89/</id>
    <published>2021-11-28T10:45:52.000Z</published>
    <updated>2021-11-28T11:05:38.609Z</updated>
    
    <content type="html"><![CDATA[<p>跨域访问测试服务器，涉及：</p><ul><li>跨域的配置</li><li>Axios的封装</li><li>Token请求头的封装</li><li>API接口的封装</li></ul><p>前后台分离部署：</p><ul><li>阿里云服务器的购买使用</li><li>FinalShell的使用</li><li>什么是Nginx为什么要用</li><li>Nginx在Windows的搭建</li><li>Nginx在Linux环境下的搭建</li><li>如何前后端分离部署</li></ul><h3 id="一-代理的配置"><a class="markdownIt-Anchor" href="#一-代理的配置"></a> 一、代理的配置：</h3><ul><li>jsonp</li><li>代理</li><li>cors</li></ul><h4 id="axios"><a class="markdownIt-Anchor" href="#axios"></a> axios：</h4><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line">Vue.prototype.axios = axios;<span class="comment">//被挂载到原型链上，这样创建的东西都挂载到实例上</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//vue.config.js </span></span><br><span class="line"><span class="comment">//请阅读：https://cli.vuejs.org/zh/config/#devserver-proxy</span></span><br><span class="line"><span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">        <span class="attr">target</span>:<span class="string">&#x27;http://139.196.234.125:8080/login&#x27;</span>,</span><br><span class="line">        <span class="attr">pathRewrite</span>:&#123;<span class="string">&#x27;^/api&#x27;</span>:<span class="string">&#x27;&#x27;</span>&#125;,</span><br><span class="line">        <span class="attr">ws</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//components/**.vue </span></span><br><span class="line"> <span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">login</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.axios(&#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">        <span class="attr">url</span>: <span class="string">&quot;/api/login&quot;</span>,</span><br><span class="line">      &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> <span class="built_in">console</span>.log(res.data));</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">find</span>(<span class="params"></span>)</span> &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">      <span class="comment">//或者</span></span><br><span class="line"> <span class="attr">methods</span>:&#123;</span><br><span class="line">    <span class="function"><span class="title">getStudents</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    axios.get(<span class="string">&#x27;http://localhost:8081/api/students&#x27;</span>).then(</span><br><span class="line">      <span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;success&#x27;</span>,response.data)</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="params">error</span> =&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;error&#x27;</span>,error.message)</span><br><span class="line">      &#125;</span><br><span class="line">    )</span><br><span class="line">  &#125;,&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="二-axios请求头的封装"><a class="markdownIt-Anchor" href="#二-axios请求头的封装"></a> 二、Axios请求头的封装：</h3><p>请求头的类型</p><p>​content-type (<u><a href="http://npmjs.com/package/axios">npmjs.com/package/axios</a></u>)</p><ul><li><u>application/json/</u>/数据以JSON格式请求{“key”:value}</li><li>application/x-www-form-urlencoded    //form表单的数据格式 name=value&amp;name=value</li><li>multipart/form-data  //上传文件的格式</li><li>text/xml  //格式</li></ul><p>我们用json</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在http.js中</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"><span class="keyword">const</span> http = axios.create(&#123;</span><br><span class="line">    <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">    <span class="attr">timeout</span>: <span class="number">10000</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  <span class="keyword">export</span> <span class="keyword">default</span> http</span><br><span class="line"><span class="comment">//main.js中</span></span><br><span class="line"><span class="keyword">import</span> http <span class="keyword">from</span> <span class="string">&#x27;./util/http.js&#x27;</span></span><br><span class="line">Vue.prototype.axios = http;</span><br></pre></td></tr></table></figure><h3 id="三-api的封装-这里可能有错误求友友更正"><a class="markdownIt-Anchor" href="#三-api的封装-这里可能有错误求友友更正"></a> 三、api的封装 （这里可能有错误，求友友更正。）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在 util/api.js 中</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> students = <span class="string">&#x27;/students&#x27;</span></span><br><span class="line"><span class="comment">//在对应组件中</span></span><br><span class="line"><span class="keyword">import</span> students <span class="keyword">from</span> <span class="string">&#x27;../util/api.js&#x27;</span></span><br><span class="line"><span class="comment">//然后ulr:&#x27;/students&#x27;-&gt; url:&#x27;students&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="四-使用nginx"><a class="markdownIt-Anchor" href="#四-使用nginx"></a> 四、使用Nginx</h3><p>两种部署方式：</p><ul><li>打包后直接给后台yarn build/ npm run build  --把dist文件给后台</li><li>前端独立部署                    — Nginx</li></ul><p>打包：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run build</span><br></pre></td></tr></table></figure><p>Nginx：（ <a href="http://nginx.org/en/download.html">http://nginx.org/en/download.html</a> ）</p><p>​负载均衡、静态服务器、正反向代理</p><p>​下载-&gt;解压</p><p><img src="/2021/11/28/Vue%E9%83%A8%E7%BD%B2%EF%BC%88Nginx%EF%BC%89/C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211128111531271.png" alt="image-20211128111531271"></p><p><img src="/2021/11/28/Vue%E9%83%A8%E7%BD%B2%EF%BC%88Nginx%EF%BC%89/C:%5CUsers%5CDELL%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211128111531271.png" alt="image-20211128111531271"></p><p>用法：</p><ul><li><p>命令环境</p><ul><li>start nginx 启动</li><li>nginx -s stop 停止不保存信息</li><li>nginx -s quit 停止保存信息</li><li>nginx -s reload 重启</li><li>nginx -v  查看版本</li></ul></li><li><p>查看是否成功</p></li></ul><p>地址栏输入<u>localhost</u>  默认80端口 欢迎界面成功</p><ul><li><p>build完以后，吧dist文件扔http里</p></li><li><p>配置nginx</p></li><li><p>在conf文件里添加这段即可。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#正向代理</span><br><span class="line">       location /api &#123;</span><br><span class="line">           rewrite  ^.+api/?(.*)$ /$1 break;</span><br><span class="line">           proxy_pass  http://localhost:5000;    #node api server 即需要代理的IP地址</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;跨域访问测试服务器，涉及：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跨域的配置&lt;/li&gt;
&lt;li&gt;Axios的封装&lt;/li&gt;
&lt;li&gt;Token请求头的封装&lt;/li&gt;
&lt;li&gt;API接口的封装&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前后台分离部署：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;阿里云服务器的购买使用</summary>
      
    
    
    
    
    <category term="Vue" scheme="http://example.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>test</title>
    <link href="http://example.com/2021/11/26/test/"/>
    <id>http://example.com/2021/11/26/test/</id>
    <published>2021-11-26T11:03:49.000Z</published>
    <updated>2021-11-26T11:04:52.932Z</updated>
    
    <content type="html"><![CDATA[<p>我试试</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;我试试&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="test" scheme="http://example.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>My New Post</title>
    <link href="http://example.com/2021/11/26/My-New-Post/"/>
    <id>http://example.com/2021/11/26/My-New-Post/</id>
    <published>2021-11-26T06:42:51.000Z</published>
    <updated>2021-11-26T11:05:06.263Z</updated>
    
    <content type="html"><![CDATA[<p>ssssss</p><p>ss</p><p>s</p><p>s</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ssssss&lt;/p&gt;
&lt;p&gt;ss&lt;/p&gt;
&lt;p&gt;s&lt;/p&gt;
&lt;p&gt;s&lt;/p&gt;
</summary>
      
    
    
    
    
    <category term="test" scheme="http://example.com/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/11/26/hello-world/"/>
    <id>http://example.com/2021/11/26/hello-world/</id>
    <published>2021-11-26T06:07:22.398Z</published>
    <updated>2021-11-26T06:07:22.398Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
